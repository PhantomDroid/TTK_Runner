name: TTK CI

on:
  push:
    paths:
      - '.github/workflows/main.yml'
  workflow_dispatch:

env:
  PAT: ${{ secrets.GH_TOKEN }}
  NGTTK_TOKEN: ${{ secrets.NGTTK_TOKEN }}
  PORT: 8080

jobs:
  container-job:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        ports:
          - 5432:5432

    steps:

      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
      - name: Cleanup workspace
        uses: rokibhasansagar/slimhub_actions@main

      - name: Prepare Apps
        run: |
          sudo apt-get -qq update -y
          sudo apt-get -qq install -y --no-install-recommends curl git wget ca-certificates nginx python3 python3-pip screen xterm aria2 software-properties-common gnupg2 gpg-agent ffmpeg mediainfo unzip p7zip-full p7zip-rar libcrypto++-dev libssl-dev libc-ares-dev libcurl4-openssl-dev libsqlite3-dev libsodium-dev
          sudo add-apt-repository -y ppa:qbittorrent-team/qbittorrent-stable
          sudo apt-get -qq install -y qbittorrent-nox
          sudo apt-get autoremove -qy
          # Prepare Base Folder
          sudo mkdir -p /torapp && sudo chown -R runner:docker /torapp && sudo chmod -R 777 /torapp
          # Get MegaSDKRest binary
          curl -sL https://github.com/viswanathbalusu/megasdkrest/releases/download/v0.1.2/megasdkrest-amd64 -O
          sudo mv megasdkrest-amd64 /usr/local/bin/megasdkrest && sudo chmod +x /usr/local/bin/megasdkrest
          # Setup Rclone with Configs
          curl -sL https://rclone.org/install.sh | sudo bash &>/dev/null
          mkdir -p ~/.config/rclone
          curl -H "Authorization: token ${PAT}" -H "Accept: application/vnd.github.v3.raw" "https://raw.githubusercontent.com/rokibhasansagar/random_gists/main/tortk/rclone.conf" > ~/.config/rclone/rclone.conf
          # Expose the localhost as ngrok external address
          curl -fsSL https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -o ngrok.zip
          unzip -q ngrok.zip ngrok && rm ngrok.zip
          chmod +x ngrok && sudo mv ngrok /usr/local/bin/
          ngrok --version
          screen -dmS ngproxy ngrok http ${PORT} --log /tmp/ngrok.log --authtoken "${NGTTK_TOKEN}" --region us
          sleep 5s
          # Clone TTK
          git clone https://github.com/yash-dk/TorToolkit-Telegram -b master /torapp
          cd /torapp && mkdir -p /torapp/{sa,tortk/files}
          git clone https://github.com/rokibhasansagar/RcloneSA4Phantom --depth 1
          mv RcloneSA4Phantom/accounts/* sa/ && rm -rf RcloneSA4Phantom
          ls sa/ > sa_list
          # Pip packages
          echo -e "\nlaunchpadlib" >> requirements.txt
          sudo -EH pip3 install --no-cache-dir -r requirements.txt
          curl -H "Authorization: token ${PAT}" -H "Accept: application/vnd.github.v3.raw" "https://raw.githubusercontent.com/rokibhasansagar/random_gists/main/tortk/ExecVarsSample.GHActions_ButlerBot.py" > tortoolkit/consts/ExecVarsSample.py
          chmod 777 alive.sh start.sh
          export ServerAddr=$(grep "url=https" /tmp/ngrok.log | awk -F' url=' '{print $NF}')
          echo -e "\nServer Address is ${ServerAddr}\n\n"
          sed -i 's|__SERVER__ADDRESS__|'"$ServerAddr"'|' tortoolkit/consts/ExecVarsSample.py

      - name: Complete Script
        timeout-minutes: 320
        continue-on-error: true
        run: |
          cd /torapp
          _randomSA() {
            while true; do
              sed -i 's|__ServiceAcc__|'"$(shuf -n 1 sa_list)"'|' ~/.config/rclone/rclone.conf
              sleep 30m
            done
          }
          _randomSA & disown
          ./start.sh

      - name: Loop
        continue-on-error: true
        run: |
          curl -X POST --header "Authorization: token ${PAT}" https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/workflows/main.yml/dispatches -d '{"ref":"main"}'
