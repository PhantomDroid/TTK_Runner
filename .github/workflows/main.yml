name: TTK CI

on:
  push:
    paths:
      - '.github/workflows/main.yml'
  workflow_dispatch:

env:
  PAT: ${{ secrets.GH_TOKEN }}
  RCLONE_CONFIG_URL: ${{ secrets.RCLONE4TTK }}
  EXEC_VAR_FILE: ${{ secrets.VARS4TTK }}
  NGTTK_TOKEN: ${{ secrets.NGTTK_TOKEN }}

jobs:
  container-job:
    runs-on: ubuntu-latest
    container: fr3akyphantom/ttk_base:latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
      - name: SSH Keepalive
        uses: rokibhasansagar/custom_workflows/ssh_keepalive@main
      - uses: rokibhasansagar/slimhub_actions@main

      - name: Checks
        run: |
          export TZ=Asia/Dhaka DEBIAN_FRONTEND=noninteractive
          echo -e "Current IP is $(curl -sL https://api.ipify.org)\n"
          apt-get -qq install -y net-tools screen xterm
          netstat -tulpn | grep LISTEN
      - name: Prepare Apps
        run: |
          export TZ=Asia/Dhaka DEBIAN_FRONTEND=noninteractive
          mkdir -p ~/.config/rclone
          curl -sL "${RCLONE_CONFIG_URL}" > ~/.config/rclone/rclone.conf
          # Clone TTK
          git clone https://github.com/yash-dk/TorToolkit-Telegram -b beta /torapp
          cd /torapp
          mkdir -p /torapp/{sa,tortk/files}
          git clone https://github.com/rokibhasansagar/RcloneSA4Phantom --depth 1
          mv RcloneSA4Phantom/accounts/* sa/ && rm -rf RcloneSA4Phantom
          ls sa/ > sa_list
          # Pip packages
          echo -e "\nlaunchpadlib" >> requirements.txt
          pip3 install --no-cache-dir -r requirements.txt
          curl -sL "${EXEC_VAR_FILE}" > tortoolkit/consts/ExecVarsSample.py
          # Expose port 80 with http.server
          screen -dmS webinternal python3 -m http.server 80
          # Expose the localhost as ngrok external address
          curl -fsSL https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -o ngrok.zip
          unzip ngrok.zip ngrok && rm ngrok.zip
          chmod +x ngrok && mv ngrok /usr/local/bin/
          screen -dmS ngproxy ngrok http 80 --log ngrok.log --authtoken "${NGTTK_TOKEN}" --region eu
          sleep 5s
          chmod 777 alive.sh start.sh
          export ServerAddr=$(grep "url=https" ngrok.log | awk -F' url=' '{print $NF}')
          echo -e "\nServer Address is ${ServerAddr}\n\n"
          sed -i 's|__SERVER__ADDRESS__|'"$ServerAddr"'|' tortoolkit/consts/ExecVarsSample.py

      - name: Complete Script
        timeout-minutes: 320
        continue-on-error: true
        run: |
          cd /torapp
          _randomSA() {
            while true; do
              sed -i 's|__ServiceAcc__|'"$(shuf -n 1 sa_list)"'|' ~/.config/rclone/rclone.conf
              sleep 30m
            done
          }
          _randomSA & disown
          PORT=80 nice -n 5 ./start.sh

      - name: Loop
        continue-on-error: true
        run: |
          curl -X POST --header "Authorization: token ${PAT}" https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/workflows/main.yml/dispatches -d '{"ref":"main"}'
