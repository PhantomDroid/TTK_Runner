name: TTK CI

on:
  workflow_dispatch:

env:
  PAT: ${{ secrets.GH_TOKEN }}
  RCLONE_CONFIG_URL: ${{ secrets.RCLONE4TTK }}
  EXEC_VAR_FILE: ${{ secrets.VARS4TTK }}
  NGTTK_TOKEN: ${{ secrets.NGTTK_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:

      - name: Set Git Configs & Secrets
        uses: rokibhasansagar/custom_workflows/git_config@main
      - name: SSH Keepalive
        uses: rokibhasansagar/custom_workflows/ssh_keepalive@main
      - uses: rokibhasansagar/slimhub_actions@main

      - name: Checks
        run: |
          echo -e "Current IP is $(curl -sL https://api.ipify.org)\n"
          sudo apt-get -qq install -y net-tools
          netstat -tulpn | grep LISTEN
          
      - name: Complete Script
        run: |
          export TZ=Asia/Dhaka DEBIAN_FRONTEND=noninteractive
          sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt focal-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get -qq update -y
          sudo apt-get -qq install -y --no-install-recommends curl git wget ca-certificates python3 python3-pip aria2 software-properties-common gnupg2 gpg-agent ffmpeg mediainfo unzip p7zip-full p7zip-rar libcrypto++-dev libssl-dev libc-ares-dev libcurl4-openssl-dev libsqlite3-dev libsodium-dev postgresql
          sudo add-apt-repository -y ppa:qbittorrent-team/qbittorrent-stable
          sudo apt-get -qq install -y qbittorrent-nox
          sudo apt-get autoremove -qy
          # Prepare Base Folder
          sudo mkdir -p /torapp
          sudo chown -R runner:docker /torapp
          sudo chmod -R 777 /torapp
          # Get MegaSDKRest binary
          curl -sL https://github.com/jaskaranSM/megasdkrest/releases/download/v0.1/megasdkrest -O
          sudo mv megasdkrest /usr/local/bin/megasdkrest
          sudo chmod +x /usr/local/bin/megasdkrest
          # Setup Rclone with Configs
          curl -sL https://rclone.org/install.sh | sudo bash &>/dev/null
          mkdir -p ~/.config/rclone
          curl -sL "${RCLONE_CONFIG_URL}" > ~/.config/rclone/rclone.conf
          # Clone TTK
          git clone https://github.com/yash-dk/TorToolkit-Telegram -b beta /torapp
          cd /torapp
          mkdir -p /torapp/{sa,tortk/files}
          git clone https://github.com/rokibhasansagar/RcloneSA4Phantom --depth 1
          mv RcloneSA4Phantom/accounts/* sa/ && rm -rf RcloneSA4Phantom
          ls sa/ > sa_list
          # Pip packages
          echo "launchpadlib" >> requirements.txt
          sudo -EH pip3 install --no-cache-dir -r requirements.txt
          curl -sL "${EXEC_VAR_FILE}" > tortoolkit/consts/ExecVarsSample.py
          # Expose port 80 with http.server
          screen -dmS webinternal sudo python3 -m http.server 80
          # Expose the localhost as ngrok external address
          screen -dmS ngproxy ngrok http 80 --log /tmp/ng.log --authtoken "${NGTTK_TOKEN}" --region eu
          export ServerAddr=$(grep "url=https" /tmp/ng.log | awk -F' url=' '{print $NF}')
          echo -e "\nServer Address is ${ServerAddr}\n\n"
          sed -i 's|__SERVER__ADDRESS__|'"$ServerAddr"'|' tortoolkit/consts/ExecVarsSample.py
          chmod 777 alive.sh start.sh
          _randomSA() {
            while true; do
              sed -i 's|__ServiceAcc__|'"$(shuf -n 1 sa_list)"'|' ~/.config/rclone/rclone.conf
              sleep 30m
            done
          }
          _randomSA & disown
          PORT=80 nice -n 5 ./start.sh
